:root {
    --penguin-face: white;
    --penguin-picorna: orange;
    --penguin-skin: gray;
}

body {
    /* box-sizing: border-box; */
    margin: 0;
    padding: 0;
    width: 100%;
    /*! "width: auto;" is Default and should be used when we have margins! Do Not use 100% when you have margins cos you'll get a horizontal scroll bar! */
    min-height: 100vh;

    overflow: clip;
    /*! Remove both the horizontal and vertical scrollbars, just like "overflow: hidden;" but also forbids all scrolling, including programmatic scrolling. It is inherited from parents to children. */

    background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
}

.left-mountain {
    width: 300px;
    height: 300px;
    margin-top: 100px;

    background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));

    position: absolute;
    z-index: 2;
    /*! set the stack level of the element */

    transform: skew(0deg, 44deg);
    /*! The 2 arguments are in this order: angle to shear the x-axis by, angle to shear the y-axis by. */

    /* border: 2px solid brown; */
}

.back-mountain {
    width: 300px;
    height: 300px;

    background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));

    position: absolute;
    top: 225px;
    left: 110px;
    z-index: 1;

    transform: rotate(45deg);
}

.sun {
    width: 200px;
    height: 200px;
    background-color: yellow;

    position: absolute;
    top: -75px;
    right: -75px;
    border-radius: 50%;
}

.penguin {
    width: 300px;
    height: 300px;

    margin-top: 75px;
    margin-inline: auto;

    position: relative;
    z-index: 4;

    /*! If we don't specify offsets for positioning the "absolute" elements that are siblings with this "static" element, the ones before this one will their "top" equal with the top of this element (see its "margin-top") and the ones after this one will have their "top" equal with the bottom of this element. */

    transition-property: transform;
    transition-duration: 1s;
    transition-timing-function: ease-in-out;
    transition-delay: 0ms;
    /*! Shorthand: "transition: transform 1s ease-in-out 0ms;" These will affect the "transform" action specified below, for "penguin:active" state! */
}

.penguin:active {
    transform: scale(1.5, 1.5);
    /*! Shorthand: "scale(1.5);" */
    cursor: not-allowed;
    /*! his shows Interdiction Sign >> here it shows that dragging the penguin is not allowed. */
}

.penguin * {
    position: absolute;
}

.penguin-head {
    width: 50%;
    height: 45%;

    top: 10%;
    left: 25%;

    background: linear-gradient(45deg, var(--penguin-skin), rgb(239, 240, 228));

    border-radius: 70% 70% 65% 65%;

    z-index: 1;
}

.face {
    width: 60%;
    height: 70%;

    /* position: absolute; */
    top: 15%;

    background-color: var(--penguin-face);

    border-radius: 70% 70% 60% 60%;
}

.face.left {
    left: 5%;
}

.face.right {
    right: 5%;
}

.chin {
    width: 90%;
    height: 70%;

    /* position: absolute; */
    top: 25%;
    left: 5%;

    background-color: var(--penguin-face);

    border-radius: 70% 70% 100% 100%;
}

.eye {
    width: 15%;
    height: 17%;

    /* position: absolute; */
    top: 45%;

    background-color: black;

    border-radius: 50%;
}

.eye.left {
    left: 25%;
}

.eye.right {
    right: 25%;
}

.eye-lid {
    width: 150%;
    height: 100%;

    /* position: absolute; */
    top: 25%;
    left: -23%;

    background-color: var(--penguin-face);

    border-radius: 50%;
}

.blush {
    width: 15%;
    height: 10%;

    /* position: absolute; */
    top: 65%;

    background-color: pink;

    border-radius: 50%;
}

.blush.left {
    left: 15%;
}

.blush.right {
    right: 15%;
}

.beak {
    height: 10%;

    background-color: var(--penguin-picorna);

    border-radius: 50%;
}

.beak.top {
    width: 20%;

    /* position: absolute; */
    top: 60%;
    left: 40%;
}

.beak.bottom {
    width: 16%;

    /* position: absolute; */
    top: 65%;
    left: 42%;
}

.shirt {
    font: bold 25px Helvetica, sans-serif;

    /* position: absolute; */
    top: 165px;
    left: 127.5px;

    z-index: 1;

    color: #6a6969;
}

.shirt div {
    font-weight: initial;
    /*! this set the "font-weight" property to its initial value (the value specified in the W3C specification for that property, like for example: "float: none" and "background: transparent". */

    /* position: absolute; */
    top: 22.5px;
    left: 12px;
}

.penguin-body {
    width: 53%;
    height: 45%;

    top: 40%;
    left: 23.5%;

    background: linear-gradient(45deg, rgb(134, 133, 133) 0%, rgb(234, 231, 231) 25%, var(--penguin-face) 67%);

    border-radius: 80% 80% 100% 100%;
}

/*! We create below a pseudo-element that is the "first-child" of the .penguin-body and set its content property to an empty string. */
.penguin-body::before {
    content: "";

    position: absolute;
    top: 10%;
    left: 25%;

    width: 50%;
    height: 45%;
    background-color: var(--penguin-skin);

    border-radius: 0% 0% 100% 100%;

    opacity: 70%;
    /*! this make the element transparency equal to 30% */
}

.arm {
    width: 30%;
    height: 60%;

    background: linear-gradient(90deg, var(--penguin-skin), rgb(209, 210, 199));

    border-radius: 30% 30% 30% 120%;

    z-index: -1;
}

.arm.left {
    top: 35%;
    left: 5%;

    transform-origin: top left;
    /*! or 0% 0% */
    transform: rotate(130deg) scaleX(-1);
    /*! With "scaleX(-1)" we make in fact Mirror without scaling the element. If we wanted to Mirror and double the scale would use "scaleX(-2)" */

    animation-name: wave;
    animation-duration: 3s;
    animation-timing-function: linear;
    animation-delay: 1s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    /*! Shorthand: "animation: wave 3s linear 1s infinite alternate;" */
}

.arm.right {
    top: 0%;
    right: -5%;

    transform: rotate(-45deg);
}

.foot {
    width: 15%;
    height: 30%;

    /* position: absolute; */
    top: 85%;

    background-color: var(--penguin-picorna);

    border-radius: 50%;

    z-index: -1;
}

.foot.left {
    /* position: absolute; */
    left: 25%;

    transform: rotate(80deg);
}

.foot.right {
    /* position: absolute; */
    right: 25%;

    transform: rotate(-80deg);
}

.ground {
    width: 100vw;
    /*! put here "width: 100%;" cos "width: 100vh;" will give you a horizontal scroll bar indiferent if you have margin or not. */
    height: calc(100vh - 300px);
    margin-top: -58px;

    background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));

    position: absolute;
    z-index: 3;

    /* border: 2px solid brown; */
}

@keyframes wave {
    10% {
        transform: rotate(110deg) scalex(-1);
    }

    20% {
        transform: rotate(130deg) scalex(-1);
    }

    30% {
        transform: rotate(110deg) scalex(-1);
    }

    40% {
        transform: rotate(130deg) scalex(-1);
    }
}